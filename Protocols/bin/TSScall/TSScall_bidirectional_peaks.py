#!/usr/bin/env python
# coding=utf-8
# Created by: Li Yao (ly349@cornell.edu)
# Created on: 2020-05-27
#
# Part of the PINTS project
# Copyright (C) 2020 Li Yao at the Yu Lab
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
import pandas as pd
import argparse


def main(input_file, output_to, include_convergent=False):
    """
    Pairing bidirectional elements for TSScall

    Parameters
    ----------
    input_file : str
        path to the detail file generated by TSScall
    output_to : str
        save the bed file to this place
    include_convergent : bool, optional
        Set to True to include convergent elements, by default False
    """
    df = pd.read_csv(input_file, sep="\t", index_col="TSS ID")
    handled_pairs = set()
    sdf = df.loc[df["Divergent?"] == True, :]
    bidirectional_records = []
    for tss, record in sdf.iterrows():
        if tss not in handled_pairs:
            partner = sdf.loc[record["Divergent partner"], :]
            positions = (record["Position"], partner["Position"])
            bidirectional_records.append((
                record["Chromosome"], min(positions) - 1, max(positions),
                "%s,%s" % (tss, record["Divergent partner"]), "Divergent", "."
            ))
            handled_pairs.add(tss)
            handled_pairs.add(partner.name)
    if include_convergent:
        sdf = df.loc[df["Convergent?"] == True, :]
        for tss, record in sdf.iterrows():
            if tss not in handled_pairs:
                partner = sdf.loc[record["Convergent partner"], :]
                positions = (record["Position"], partner["Position"])
                bidirectional_records.append((
                    record["Chromosome"], min(positions) - 1, max(positions),
                    "%s,%s" % (tss, record["Convergent partner"]), "Convergent", "."
                ))
                handled_pairs.add(tss)
                handled_pairs.add(partner.name)
    result_df = pd.DataFrame(bidirectional_records)
    result_df.sort_values(by=[0, 1], inplace=True)
    result_df.to_csv(output_to, sep="\t", index=False, header=False)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--input', default=None, type=str, required=True,
                        help='Detail file from TSScall')
    parser.add_argument('--include-convergent', action='store_true', default=False,
                        help='Whether to include convergent peaks')
    parser.add_argument('--save-to', type=str, required=True,
                        help='Save bidirectional elements to this file')

    args = parser.parse_args()

    main(input_file=args.input, output_to=args.save_to, include_convergent=args.include_convergent)
